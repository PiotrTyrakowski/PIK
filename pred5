import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeRegressor

# Read the data
data = pd.read_csv('test.csv', header=0, sep=', ', engine='python')

# Initialize variables for simulation
cash = 10000  # Initial investment
shares = 0
capital = cash

# Iterate through the data and simulate buying and selling
for i in range(1440, len(data) - 60, 60):  # Start from the 2nd day and step by 60 minutes
    # Extract the open price for the current day
    open_price = data.iloc[i:i+60, 1].values.reshape(-1, 1)

    # Create a new decision tree regressor and train it on the current day's data
    model = DecisionTreeRegressor()
    model.fit(open_price[:-1], open_price[1:])

    # Predict the price of the stock in the next 60 minutes
    future_price = model.predict(open_price[-1].reshape(1, -1))[0]

    # Buy shares if the predicted price is higher than the current price
    if future_price > data.iloc[i, 1]:
        buy_shares = cash // data.iloc[i, 1]
        shares += buy_shares
        cash -= buy_shares * data.iloc[i, 1]

    # Sell shares if the predicted price is lower than the current price
    elif future_price < data.iloc[i, 1] and shares > 0:
        cash += shares * data.iloc[i, 1]
        shares = 0

    # Update capital (cash + value of shares)
    capital = cash + shares * data.iloc[i, 1]

print("Final Capital:", capital)
